<?php

namespace common\models;

use common\components\orm\ActiveRecord;
use common\helpers\BaseHelper;
use Yii;
use yii\db\ActiveQuery;

/**
 * This is the model class for table "product_category".
 *
 * @property int $id
 * @property int|null $parent_category_id
 * @property int|null $cover_image_id
 * @property string|null $name
 * @property string|null $description
 * @property int|null $order
 * @property int|null $created_at
 * @property int|null $created_by
 * @property int|null $updated_at
 * @property int|null $updated_by
 * @property int|null $is_deleted
 *
 * @property Image $coverImage
 * @property ProductCategory $parentCategory
 * @property ProductCategory[] $productCategories
 */
class ProductCategory extends ActiveRecord
{
    public $coverImageIds;

    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'product_category';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name'], 'required'],
            [['parent_category_id', 'cover_image_id', 'order', 'created_at', 'created_by', 'updated_at', 'updated_by', 'is_deleted'], 'integer'],
            [['description'], 'string'],
            [['name'], 'string', 'max' => 255],
            [['parent_category_id'], 'exist', 'skipOnError' => true, 'targetClass' => ProductCategory::className(), 'targetAttribute' => ['parent_category_id' => 'id']],
            [['cover_image_id'], 'exist', 'skipOnError' => true, 'targetClass' => Image::className(), 'targetAttribute' => ['cover_image_id' => 'id']],
            [['coverImageIds'], 'safe']
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'parent_category_id' => Yii::t('app', 'Parent Category'),
            'cover_image_id' => Yii::t('app', 'Cover Image Id'),
            'name' => Yii::t('app', 'Name'),
            'description' => Yii::t('app', 'Description'),
            'order' => Yii::t('app', 'Order'),
            'created_at' => Yii::t('app', 'Created At'),
            'created_by' => Yii::t('app', 'Created By'),
            'updated_at' => Yii::t('app', 'Updated At'),
            'updated_by' => Yii::t('app', 'Updated By'),
            'is_deleted' => Yii::t('app', 'Is Deleted'),
            'coverImageIds' => Yii::t('app', 'Cover Image'),
        ];
    }

    public function beforeValidate()
    {
        if(!empty($this->coverImageIds)) {
            $coverImageIds = BaseHelper::extractIdsFromDropzoneValue($this->coverImageIds, 1);
            $this->cover_image_id = $coverImageIds[0];
        }
        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * Gets query for [[CoverImage]].
     *
     * @return ActiveQuery
     */
    public function getCoverImage()
    {
        return $this->hasOne(Image::className(), ['id' => 'cover_image_id']);
    }

    /**
     * Gets query for [[ParentCategory]].
     *
     * @return ActiveQuery
     */
    public function getParentCategory()
    {
        return $this->hasOne(ProductCategory::className(), ['id' => 'parent_category_id']);
    }

    /**
     * Gets query for [[ProductCategories]].
     *
     * @return ActiveQuery
     */
    public function getProductCategories()
    {
        return $this->hasMany(ProductCategory::className(), ['parent_category_id' => 'id']);
    }
}
